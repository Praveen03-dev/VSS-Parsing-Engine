/*
 * This file is automatically generated. Do not modify.
 *
 * Generated from VSS file at 
 */
#define LOG_TAG "automotive.vehicle@2.0-default-service"

#include <android/log.h>
#include <hidl/LegacySupport.h>
#include <vhal_v2_0/DefaultVehicleHal.h>
#include <vhal_v2_0/VehicleHalManager.h>
#include <vhal_v2_0/VehiclePropertyStore.h>
#include "VssVehicleEmulator.h"

using android::hardware::automotive::vehicle::V2_0::impl::DefaultVehicleHal;
using android::hardware::automotive::vehicle::V2_0::VehicleHalManager;
using android::hardware::configureRpcThreadpool;
using android::hardware::joinRpcThreadpool;
using android::sp;

int main() {
    configureRpcThreadpool(4, true /* callerWillJoin */);

    ALOGI("Starting Vehicle HAL Service");
    
    // Instantiate your custom VHAL implementation.
    sp<DefaultVehicleHal> hal = new DefaultVehicleHal();
    
    // Wrap it in the standard manager to handle boilerplate.
    sp<VehicleHalManager> service = new VehicleHalManager(hal.get());

    android::status_t status = service->registerAsService();
    if (status != android::OK) {
        ALOGE("Failed to register Vehicle HAL Service, error: %d", status);
        return 1;
    }

    ALOGI("Vehicle HAL Service registered successfully. Ready.");
    joinRpcThreadpool();
    
    ALOGI("Vehicle HAL Service shutting down.");
    return 0;
}